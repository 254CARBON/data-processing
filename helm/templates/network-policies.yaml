{{/*
Network Policies for service isolation
*/}}
{{- if .Values.security.networkPolicies.enabled }}

# Network Policy for Normalization Service
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "data-processing-pipeline.serviceName" (dict "serviceName" "normalization") }}-netpol
  labels:
    {{- include "data-processing-pipeline.serviceLabels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      {{- include "data-processing-pipeline.serviceSelectorLabels" . | nindent 6 }}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: {{ .Release.Namespace }}
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: data-processing-pipeline
          app.kubernetes.io/component: gateway
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: kafka
    ports:
    - protocol: TCP
      port: 9092
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: clickhouse
    ports:
    - protocol: TCP
      port: 8123
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: postgresql
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: redis
    ports:
    - protocol: TCP
      port: 6379

# Network Policy for Enrichment Service
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "data-processing-pipeline.serviceName" (dict "serviceName" "enrichment") }}-netpol
  labels:
    {{- include "data-processing-pipeline.serviceLabels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      {{- include "data-processing-pipeline.serviceSelectorLabels" . | nindent 6 }}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: {{ .Release.Namespace }}
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: data-processing-pipeline
          app.kubernetes.io/component: normalization-service
    ports:
    - protocol: TCP
      port: 8081
  egress:
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: kafka
    ports:
    - protocol: TCP
      port: 9092
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: clickhouse
    ports:
    - protocol: TCP
      port: 8123
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: postgresql
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: redis
    ports:
    - protocol: TCP
      port: 6379

# Network Policy for Aggregation Service
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "data-processing-pipeline.serviceName" (dict "serviceName" "aggregation") }}-netpol
  labels:
    {{- include "data-processing-pipeline.serviceLabels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      {{- include "data-processing-pipeline.serviceSelectorLabels" . | nindent 6 }}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: {{ .Release.Namespace }}
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: data-processing-pipeline
          app.kubernetes.io/component: enrichment-service
    ports:
    - protocol: TCP
      port: 8082
  egress:
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: kafka
    ports:
    - protocol: TCP
      port: 9092
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: clickhouse
    ports:
    - protocol: TCP
      port: 8123
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: postgresql
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: redis
    ports:
    - protocol: TCP
      port: 6379

# Network Policy for Projection Service
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "data-processing-pipeline.serviceName" (dict "serviceName" "projection") }}-netpol
  labels:
    {{- include "data-processing-pipeline.serviceLabels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      {{- include "data-processing-pipeline.serviceSelectorLabels" . | nindent 6 }}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: {{ .Release.Namespace }}
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: data-processing-pipeline
          app.kubernetes.io/component: aggregation-service
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: data-processing-pipeline
          app.kubernetes.io/component: gateway
    ports:
    - protocol: TCP
      port: 8083
  egress:
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: kafka
    ports:
    - protocol: TCP
      port: 9092
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: clickhouse
    ports:
    - protocol: TCP
      port: 8123
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: postgresql
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: redis
    ports:
    - protocol: TCP
      port: 6379

# Network Policy for Kafka
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "data-processing-pipeline.fullname" . }}-kafka-netpol
  labels:
    {{- include "data-processing-pipeline.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: kafka
      app.kubernetes.io/instance: {{ .Release.Name }}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: {{ .Release.Namespace }}
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: data-processing-pipeline
    ports:
    - protocol: TCP
      port: 9092
  egress:
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: zookeeper
    ports:
    - protocol: TCP
      port: 2181

# Network Policy for ClickHouse
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "data-processing-pipeline.fullname" . }}-clickhouse-netpol
  labels:
    {{- include "data-processing-pipeline.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: clickhouse
      app.kubernetes.io/instance: {{ .Release.Name }}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: {{ .Release.Namespace }}
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: data-processing-pipeline
    ports:
    - protocol: TCP
      port: 8123
    - protocol: TCP
      port: 9000
  egress: []

# Network Policy for PostgreSQL
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "data-processing-pipeline.fullname" . }}-postgresql-netpol
  labels:
    {{- include "data-processing-pipeline.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: {{ .Release.Name }}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: {{ .Release.Namespace }}
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: data-processing-pipeline
    ports:
    - protocol: TCP
      port: 5432
  egress: []

# Network Policy for Redis
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "data-processing-pipeline.fullname" . }}-redis-netpol
  labels:
    {{- include "data-processing-pipeline.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: {{ .Release.Name }}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: {{ .Release.Namespace }}
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: data-processing-pipeline
    ports:
    - protocol: TCP
      port: 6379
  egress: []

{{- end }}
